# Copyright (c) 2022 ARM Limited. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

cmake_minimum_required(VERSION 3.19.0)

set(MBED_PATH ${CMAKE_CURRENT_SOURCE_DIR}/mbed-os CACHE INTERNAL "")
set(MBED_CONFIG_PATH ${CMAKE_CURRENT_BINARY_DIR} CACHE INTERNAL "")

include(${MBED_PATH}/tools/cmake/app.cmake)

add_subdirectory(${MBED_PATH})


project(workspace)

set(MBED_PATH
    ${CMAKE_CURRENT_SOURCE_DIR}/mbed-os
    CACHE INTERNAL "")
set(MBED_CONFIG_PATH
    ${CMAKE_CURRENT_BINARY_DIR}
    CACHE INTERNAL "")
set(APP_TARGET mros2-mbed)

#include(${MBED_PATH}/tools/cmake/app.cmake)

#add_subdirectory(${MBED_PATH})

#if(DEFINED ENV{APPNAME})
#  set(APP_NAME $ENV{APPNAME})
#else()
#  set(APP_NAME "echoreply_string")
#endif()
#message(STATUS "APP_NAME=${APP_NAME}")

execute_process(COMMAND git submodule update --init --recursive
                WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/mros2)
add_library(mros2 INTERFACE)
add_subdirectory(mros2)
include_directories(mros2/include)
include_directories(include)
include_directories(workspace)

set(RTPS_CONFIG_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/include")

add_executable(main
    workspace/main.cpp
)
target_link_libraries(main mbed-os mbed-lwipstack mros2)

mbed_set_post_build(main)

option(VERBOSE_BUILD "Have a verbose build process")
if(VERBOSE_BUILD)
    set(CMAKE_VERBOSE_MAKEFILE ON)
endif()